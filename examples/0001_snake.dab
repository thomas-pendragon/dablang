// Snake game, initial experiments with using FFI to access SDL2 library

// int SDL_Init(Uint32 flags)
[__import_sdl("SDL_Init")]
func SDL_Init<Int32>(flags<Uint32>) {}

// extern DECLSPEC SDL_Window * SDLCALL SDL_CreateWindow(const char *title,
//                                                      int x, int y, int w,
//                                                      int h, Uint32 flags);
[__import_sdl("SDL_CreateWindow")]
func SDL_CreateWindow<IntPtr>(title<String>, x<Int32>, y<Int32>, w<Int32>, h<Int32>, flags<Uint32>) {}

// void SDL_Delay(Uint32 ms)
[__import_sdl("SDL_Delay")]
func SDL_Delay<NilClass>(ms<Uint32>) {}

// int SDL_PollEvent(SDL_Event* event)
[__import_sdl("SDL_PollEvent")]
func SDL_PollEvent<Int32>(event<IntPtr>) {}

//SDL_Renderer* SDL_CreateRenderer(SDL_Window* window,
//                                 int         index,
//                               Uint32      flags)
[__import_sdl("SDL_CreateRenderer")]
func SDL_CreateRenderer<IntPtr>(window<IntPtr>, index<Int32>, flags<Uint32>) {}

//int SDL_RenderClear(SDL_Renderer* renderer)
[__import_sdl("SDL_RenderClear")]
func SDL_RenderClear<Int32>(renderer<IntPtr>) {}

//void SDL_RenderPresent(SDL_Renderer* renderer)
[__import_sdl("SDL_RenderPresent")]
func SDL_RenderPresent<NilClass>(renderer<IntPtr>) {}

// int SDL_SetRenderDrawColor(SDL_Renderer* renderer,
//                            Uint8         r,
//                            Uint8         g,
//                            Uint8         b,
//                            Uint8         a)
[__import_sdl("SDL_SetRenderDrawColor")]
func SDL_SetRenderDrawColor<Int32>(renderer<IntPtr>, r<Uint8>, g<Uint8>, b<Uint8>, a<Uint8>) {}

func main()
{
  var SDL_INIT_VIDEO = 32;
  var status = SDL_Init(SDL_INIT_VIDEO);
  print("SDL_Init: ");
  puts(status);

  var SDL_WINDOWPOS_UNDEFINED = 536805376;
  var SDL_WINDOWPOS_CENTERED =  805240832;
  var SCREEN_WIDTH = 640;
  var SCREEN_HEIGHT = 480;
  var SDL_WINDOW_SHOWN = 4;
  var SDL_WINDOW_OPENGL = 2;
  var window = SDL_CreateWindow("Example 0001: snake",
    SDL_WINDOWPOS_CENTERED,
    SDL_WINDOWPOS_CENTERED,
    SCREEN_WIDTH,
    SCREEN_HEIGHT,
    SDL_WINDOW_OPENGL);
  print("SDL_CreateWindow: ");
  puts(window);

 /* var SDL_RENDERER_ACCELERATED = 2;
  var SDL_RENDERER_PRESENTVSYNC = 4;
  var renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC);
  print("SDL_CreateRenderer: ");
  puts(renderer);*/

  var frame = 0;
  while (frame < 300)
  {
    var<IntPtr> event = nil;
    var ret = SDL_PollEvent(event);

    /* var SDL_ALPHA_OPAQUE=255;
    SDL_SetRenderDrawColor(renderer, 0, 0, 0, SDL_ALPHA_OPAQUE);
    SDL_RenderClear(renderer);
    SDL_RenderPresent(renderer);*/
    SDL_Delay(16);

    frame = frame + 1;
  }
}
