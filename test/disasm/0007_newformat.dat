## CODE

44 41 42 00 03 00 00 00  00 00 00 00 00 00 00 00
e8 00 00 00 00 00 00 00  f8 00 00 00 00 00 00 00
06 00 00 00 00 00 00 00  64 61 74 61 00 00 00 00
00 00 00 00 00 00 00 00  e8 00 00 00 00 00 00 00
02 00 00 00 00 00 00 00  63 6f 64 65 00 00 00 00
00 00 00 00 00 00 00 00  ea 00 00 00 00 00 00 00
50 00 00 00 00 00 00 00  73 79 6d 64 00 00 00 00
00 00 00 00 00 00 00 00  3a 01 00 00 00 00 00 00
18 00 00 00 00 00 00 00  73 79 6d 62 00 00 00 00
00 00 00 00 00 00 00 00  52 01 00 00 00 00 00 00
30 00 00 00 00 00 00 00  66 65 78 74 00 00 00 00
00 00 00 00 00 00 00 00  82 01 00 00 00 00 00 00
5d 00 00 00 00 00 00 00  6e 64 61 74 00 00 00 00
00 00 00 00 00 00 00 00  df 01 00 00 00 00 00 00
01 00 00 00 00 00 00 00  0a 00 00 22 00 00 1c ff
ff 00 22 00 00 1c ff ff  00 22 00 00 0f 00 00 04
00 00 00 ff ff 1b ff ff  00 01 00 00 11 01 00 e8
00 00 00 00 00 00 00 01  00 00 00 00 00 00 00 1b
ff ff 00 01 01 00 0f 02  00 04 00 01 00 ff ff 1b
ff ff 00 01 02 00 1c ff  ff 00 5f 5f 69 6e 69 74
5f 30 00 61 00 62 00 63  00 66 6f 6f 00 6d 61 69
6e 00 3a 01 00 00 00 00  00 00 43 01 00 00 00 00
00 00 45 01 00 00 00 00  00 00 47 01 00 00 00 00
00 00 49 01 00 00 00 00  00 00 4d 01 00 00 00 00
00 00 00 00 ff ff eb 00  00 00 00 00 00 00 00 00
06 00 00 00 00 00 00 00  00 ff ff 00 00 04 00 ff
ff f2 00 00 00 00 00 00  00 03 00 06 00 00 00 00
00 00 00 00 01 00 01 00  02 00 06 00 03 00 00 00
ff ff 00 00 05 00 ff ff  f9 00 00 00 00 00 00 00
00 00 40 00 00 00 00 00  00 00 00 ff ff 00 00 00



## OPTIONS

--with-headers

## COMMENT

func foo(a<String>, b<Uint8>, c)
{
}

func main()
{
  print(reflect_method_arguments(foo));
  print("\n");
  print(reflect_method_argument_names(foo));
}

pbpaste | ruby src/compiler/compiler.rb --with-attributes --with-reflection  | ruby src/tobinary/tobinary.rb | hexdump -e '8/1 "%02x " "  " 8/1 "%02x " "\n"' | pbcopy

## EXPECT

/* disasm */
    W_HEADER 3
    W_OFFSET 0
    W_SECTION _DATA, "data"
    W_SECTION _CODE, "code"
    W_SECTION _SYMD, "symd"
    W_SECTION _SYMB, "symb"
    W_SECTION _FEXT, "fext"
    W_SECTION _NDAT, "ndat"
    W_END_HEADER

_DATA:
/*      232: */ W_BYTE 10
/*      233: */ W_BYTE 0

_CODE:
/*      234: */ NOP 
/*      235: */ STACK_RESERVE 0
/*      238: */ RETURN RNIL
/*      241: */ NOP 
/*      242: */ STACK_RESERVE 0
/*      245: */ RETURN RNIL
/*      248: */ NOP 
/*      249: */ STACK_RESERVE 0
/*      252: */ REFLECT R0, S4, 0, 65535
/*      261: */ SYSCALL RNIL, 0, R0
/*      268: */ LOAD_STRING R1, 232, 1
/*      287: */ SYSCALL RNIL, 0, R1
/*      294: */ REFLECT R2, S4, 1, 65535
/*      303: */ SYSCALL RNIL, 0, R2
/*      310: */ RETURN RNIL
/*      313: */ NOP 

_SYMD:
/*      314: */ W_STRING "__init_0"
/*      323: */ W_STRING "a"
/*      325: */ W_STRING "b"
/*      327: */ W_STRING "c"
/*      329: */ W_STRING "foo"
/*      333: */ W_STRING "main"

_SYMB:
/*      338: */ W_SYMBOL 314
/*      346: */ W_SYMBOL 323
/*      354: */ W_SYMBOL 325
/*      362: */ W_SYMBOL 327
/*      370: */ W_SYMBOL 329
/*      378: */ W_SYMBOL 333

_FEXT:
/*      386: */ W_METHOD 0, -1, 235, 0, 6, 0
                W_METHOD_ARG -1, 0
/*      413: */ W_METHOD 4, -1, 242, 3, 6, 0
                W_METHOD_ARG 1, 1
                W_METHOD_ARG 2, 6
                W_METHOD_ARG 3, 0
                W_METHOD_ARG -1, 0
/*      452: */ W_METHOD 5, -1, 249, 0, 64, 0
                W_METHOD_ARG -1, 0

_NDAT:
/*      479: */ W_BYTE 0
