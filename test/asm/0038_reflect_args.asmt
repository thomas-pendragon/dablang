## CODE

func foo(a, b<Uint8>)
{
  print(reflect_method_arguments(foo));
}

## OPTIONS

--no-opt --with-reflection --entry=foo

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _CODE, "code"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_END_HEADER 
 
                   _CODE:
                                 NOP 
 
                   F__init:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __F__init_END:
                                 NOP 
 
                   Ffoo:
                                 STACK_RESERVE 0
/* a            */               LOAD_ARG R0, 0
/* b            */               LOAD_ARG R1, 1
                                 REFLECT R2, S3, 0, -1
/* PRINT        */               SYSCALL RNIL, 0, R2
                                 RETURN RNIL
                   __Ffoo_END:
                                 NOP 
 
                   _SDAT:
                                 W_STRING "__init" 
                                 W_STRING "a" 
                                 W_STRING "b" 
                                 W_STRING "foo" 
 
                   _SYMB:
/* __init       */               W_SYMBOL _SDAT + 0 
/* a            */               W_SYMBOL _SDAT + 7 
/* b            */               W_SYMBOL _SDAT + 9 
/* foo          */               W_SYMBOL _SDAT + 11 
 
                   _FUNC:
/* __init       */               W_METHOD 0, -1, F__init, 0, __F__init_END - F__init
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* foo          */               W_METHOD 3, -1, Ffoo, 2, __Ffoo_END - Ffoo
/* a<Object>    */               W_METHOD_ARG 1, 0
/* b<Uint8>     */               W_METHOD_ARG 2, 6
/* $ret<Object> */               W_METHOD_ARG -1, 0
