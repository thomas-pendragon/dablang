## CODE

func tap() {}

func main(arg)
{
  var local = 1;
  tap() ^ {
    print(local);
    print(arg);
  };
}

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _CODE, "code"
                                 W_SECTION _CLAS, "clas"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_SECTION _NDAT, "ndat"
                                 W_END_HEADER 
 
                   _CODE:
                                 NOP 
 
                   F__init_0:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __F__init_0_END:
                                 NOP 
 
                   Fmain:
                                 STACK_RESERVE 0
/* arg          */               LOAD_ARG R0, 0
                                 BOX R1, R0
/* 1            */               LOAD_NUMBER R2, 1
                                 BOX R3, R2
                                 LOAD_SELF R4
/* __block_main */               LOAD_CLASS R5, 256
/* new          */               INSTCALL R6, R5, S11, R4, R3, R1
                                 LOAD_LOCAL_BLOCK R7, R6
/* tap          */               CALL RNIL, S13, R7
                                 RETURN RNIL
                   __Fmain_END:
                                 NOP 
 
                   Ftap:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __Ftap_END:
                                 NOP 
 
                   C__block_main0_F__construct:
                                 STACK_RESERVE 0
/* arg_self     */               LOAD_ARG R0, 0
/* @self=       */               SET_INSTVAR S12, R0
/* arg_local    */               LOAD_ARG R1, 1
/* arg_arg      */               LOAD_ARG R2, 2
                                 NEW_ARRAY R3, R1, R2
/* @closure=    */               SET_INSTVAR S9, R3
                                 RETURN RNIL
                   __C__block_main0_F__construct_END:
                                 NOP 
 
                   C__block_main0_Fcall:
                                 STACK_RESERVE 0
/* 1            */               LOAD_NUMBER R0, 1
/* @closure     */               GET_INSTVAR R1, S9
/* []           */               INSTCALL R2, R1, S0, R0
/* 0            */               LOAD_NUMBER R3, 0
/* @closure     */               GET_INSTVAR R4, S9
/* []           */               INSTCALL R5, R4, S0, R3
                                 UNBOX R6, R5
/* PRINT        */               SYSCALL RNIL, 0, R6
                                 UNBOX R7, R2
/* PRINT        */               SYSCALL RNIL, 0, R7
                                 RETURN RNIL
                   __C__block_main0_Fcall_END:
                                 NOP 
 
                   _CLAS:
/* __block_main */               W_CLASS 256, 14, 1
 
                   _SDAT:
                                 W_STRING "[]" 
                                 W_STRING "__block_main0" 
                                 W_STRING "__construct" 
                                 W_STRING "__init_0" 
                                 W_STRING "arg" 
                                 W_STRING "arg_arg" 
                                 W_STRING "arg_local" 
                                 W_STRING "arg_self" 
                                 W_STRING "call" 
                                 W_STRING "closure" 
                                 W_STRING "main" 
                                 W_STRING "new" 
                                 W_STRING "self" 
                                 W_STRING "tap" 
 
                   _SYMB:
/* []           */               W_SYMBOL _SDAT + 0 
/* __block_main */               W_SYMBOL _SDAT + 3 
/* __construct  */               W_SYMBOL _SDAT + 17 
/* __init_0     */               W_SYMBOL _SDAT + 29 
/* arg          */               W_SYMBOL _SDAT + 38 
/* arg_arg      */               W_SYMBOL _SDAT + 42 
/* arg_local    */               W_SYMBOL _SDAT + 50 
/* arg_self     */               W_SYMBOL _SDAT + 60 
/* call         */               W_SYMBOL _SDAT + 69 
/* closure      */               W_SYMBOL _SDAT + 74 
/* main         */               W_SYMBOL _SDAT + 82 
/* new          */               W_SYMBOL _SDAT + 87 
/* self         */               W_SYMBOL _SDAT + 91 
/* tap          */               W_SYMBOL _SDAT + 96 
 
                   _FUNC:
/* __init_0     */               W_METHOD 3, -1, F__init_0, 0, __F__init_0_END - F__init_0, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* main         */               W_METHOD 10, -1, Fmain, 1, __Fmain_END - Fmain, 0
/* arg<Object>  */               W_METHOD_ARG 4, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* tap          */               W_METHOD 13, -1, Ftap, 0, __Ftap_END - Ftap, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* __construct  */               W_METHOD 2, 256, C__block_main0_F__construct, 3, __C__block_main0_F__construct_END - C__block_main0_F__construct, 0
/* arg_self<Obj */               W_METHOD_ARG 7, 0
/* arg_local<Ob */               W_METHOD_ARG 6, 0
/* arg_arg<Obje */               W_METHOD_ARG 5, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* call         */               W_METHOD 8, 256, C__block_main0_Fcall, 0, __C__block_main0_Fcall_END - C__block_main0_Fcall, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
 
                   _NDAT:
                                 W_BYTE 0
