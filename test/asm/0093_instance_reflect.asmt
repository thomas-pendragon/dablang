## CODE

class Foo
{
  func zomg(a, b<Uint8>)
  {  
  }
}

func foo(n)
{
  print(reflect_instance_method_argument_types(Foo, zomg));
}

## OPTIONS

--no-opt --with-reflection --entry=foo --newformat

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _CODE, "code"
                                 W_SECTION _CLAS, "clas"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_END_HEADER 
 
                   _CODE:
                                 NOP 
 
                   F__init:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __F__init_END:
                                 NOP 
 
                   Ffoo:
                                 STACK_RESERVE 0
/* n            */               LOAD_ARG R0, 0
                                 REFLECT R1, S6, 2, 256
/* PRINT        */               SYSCALL RNIL, 0, R1
                                 RETURN RNIL
                   __Ffoo_END:
                                 NOP 
 
                   CFoo_Fzomg:
                                 STACK_RESERVE 0
/* a            */               LOAD_ARG R0, 0
/* b            */               LOAD_ARG R1, 1
                                 RETURN RNIL
                   __CFoo_Fzomg_END:
                                 NOP 
 
                   _CLAS:
/* Foo          */               W_CLASS 256, 0, 0
 
                   _SDAT:
                                 W_STRING "Foo" 
                                 W_STRING "__init" 
                                 W_STRING "a" 
                                 W_STRING "b" 
                                 W_STRING "foo" 
                                 W_STRING "n" 
                                 W_STRING "zomg" 
 
                   _SYMB:
/* Foo          */               W_SYMBOL _SDAT + 0 
/* __init       */               W_SYMBOL _SDAT + 4 
/* a            */               W_SYMBOL _SDAT + 11 
/* b            */               W_SYMBOL _SDAT + 13 
/* foo          */               W_SYMBOL _SDAT + 15 
/* n            */               W_SYMBOL _SDAT + 19 
/* zomg         */               W_SYMBOL _SDAT + 21 
 
                   _FUNC:
/* __init       */               W_METHOD_EX 1, -1, F__init, 0
                                 W_METHOD_LEN __F__init_END - F__init
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* foo          */               W_METHOD_EX 4, -1, Ffoo, 1
                                 W_METHOD_LEN __Ffoo_END - Ffoo
/* n<Object>    */               W_METHOD_ARG 5, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* zomg         */               W_METHOD_EX 6, 256, CFoo_Fzomg, 2
                                 W_METHOD_LEN __CFoo_Fzomg_END - CFoo_Fzomg
/* a<Object>    */               W_METHOD_ARG 2, 0
/* b<Uint8>     */               W_METHOD_ARG 3, 6
/* $ret<Object> */               W_METHOD_ARG -1, 0
