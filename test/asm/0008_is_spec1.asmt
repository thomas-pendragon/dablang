## CODE

func foo(a)
{
  if (a is String)
  {
    print("got string");
  }
  if (a is Fixnum)
  {
    print("got fixnum");
  }
}

func bar()
{
  foo("str");
  foo(12);
}

## OPTIONS

--no-opt --entry=bar

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _DATA, "data"
                                 W_SECTION _CODE, "code"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_SECTION _NDAT, "ndat"
                                 W_END_HEADER 
 
                   _DATA:
                                 W_STRING "got fixnum" 
                                 W_STRING "got string" 
                                 W_STRING "str" 
 
                   _CODE:
                                 NOP 
 
                   F__init_0:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __F__init_0_END:
                                 NOP 
 
                   Fbar:
                                 STACK_RESERVE 0
/* "str"        */               LOAD_STRING R0, _DATA + 22, 3
/* foo          */               CALL RNIL, S3, R0
/* 12           */               LOAD_NUMBER R1, 12
/* foo          */               CALL RNIL, S3, R1
                                 RELEASE R0
                                 RELEASE R1
                                 RETURN RNIL
                   __Fbar_END:
                                 NOP 
 
                   Ffoo:
                                 STACK_RESERVE 0
/* a            */               LOAD_ARG R0, 0
/* String       */               LOAD_CLASS R1, 1
/* is           */               INSTCALL R2, R0, S4, R1
                                 JMP_IF R2, L1, L2
                   L1:
/* "got string" */               LOAD_STRING R3, _DATA + 11, 10
/* PRINT        */               SYSCALL RNIL, 0, R3
                                 JMP L2
                   L2:
/* Fixnum       */               LOAD_CLASS R4, 2
/* is           */               INSTCALL R5, R0, S4, R4
                                 JMP_IF R5, L3, L4
                   L3:
/* "got fixnum" */               LOAD_STRING R6, _DATA + 0, 10
/* PRINT        */               SYSCALL RNIL, 0, R6
                                 JMP L4
                   L4:
                                 RELEASE R0
                                 RELEASE R1
                                 RELEASE R2
                                 RELEASE R3
                                 RELEASE R4
                                 RELEASE R5
                                 RELEASE R6
                                 RETURN RNIL
                   __Ffoo_END:
                                 NOP 
 
                   _SDAT:
                                 W_STRING "__init_0" 
                                 W_STRING "a" 
                                 W_STRING "bar" 
                                 W_STRING "foo" 
                                 W_STRING "is" 
 
                   _SYMB:
/* __init_0     */               W_SYMBOL _SDAT + 0 
/* a            */               W_SYMBOL _SDAT + 9 
/* bar          */               W_SYMBOL _SDAT + 11 
/* foo          */               W_SYMBOL _SDAT + 15 
/* is           */               W_SYMBOL _SDAT + 19 
 
                   _FUNC:
/* __init_0     */               W_METHOD 0, -1, F__init_0, 0, __F__init_0_END - F__init_0, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* bar          */               W_METHOD 2, -1, Fbar, 0, __Fbar_END - Fbar, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* foo          */               W_METHOD 3, -1, Ffoo, 1, __Ffoo_END - Ffoo, 0
/* a<Object>    */               W_METHOD_ARG 1, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
 
                   _NDAT:
                                 W_BYTE 0
