## CODE

func foo(a, b)
{
  if (a)
  {
    if (b)
    {
      print("a && b");
    }
    else
    {
      print("a && !b");
    };
  }
  else
  {
    if (b)
    {
      print("!a && b");    
    }
    else
    {
      print("!a && !b");
    };
  };
}

## OPTIONS



## EXPECT

/* Dab dev      */                
 
                                 CONSTANT_STRING "!a && !b"
                                 CONSTANT_STRING "!a && b"
                                 CONSTANT_STRING "a && !b"
                                 CONSTANT_STRING "a && b"
 
                                 LOAD_FUNCTION Ffoo, foo, -1
 
                                 BREAK_LOAD 
 
                   Ffoo:
                                 STACK_RESERVE 0
/* b            */               Q_SET_ARG R0, 1
/* a            */               Q_SET_ARG R1, 0
                                 PUSH_SSA R1
                                 JMP_IF2 L1, L2
                   L1:
                                 PUSH_SSA R0
                                 JMP_IF2 L3, L4
                   L3:
/* "a && b"     */               Q_SET_CONSTANT R2, 3
                                 Q_VOID_SYSCALL 0, R2
                                 JMP L5
                   L4:
/* "a && !b"    */               Q_SET_CONSTANT R3, 2
                                 Q_VOID_SYSCALL 0, R3
                                 JMP L5
                   L2:
                                 PUSH_SSA R0
                                 JMP_IF2 L6, L7
                   L6:
/* "!a && b"    */               Q_SET_CONSTANT R4, 1
                                 Q_VOID_SYSCALL 0, R4
                                 JMP L5
                   L7:
/* "!a && !b"   */               Q_SET_CONSTANT R5, 0
                                 Q_VOID_SYSCALL 0, R5
                                 JMP L5
                   L5:
                                 PUSH_NIL 
                                 RETURN
