## CODE

func main()
{
  var i = 0;
  while (i < 3) {
    i = i + 1;  
  }
  print(i);
}

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _CODE, "code"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_SECTION _NDAT, "ndat"
                                 W_END_HEADER 
 
                   _CODE:
                                 NOP 
 
                   F__init_0:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __F__init_0_END:
                                 NOP 
 
                   Fmain:
                                 STACK_RESERVE 0
/* 0            */               LOAD_NUMBER R0, 0
/* 3            */               LOAD_NUMBER R1, 3
                                 JMP L1
                   L1:
/* <            */               INSTCALL R2, R0, S1, R1
                                 JMP_IF R2, L2, L3
                   L2:
/* 1            */               LOAD_NUMBER R3, 1
                                 MOV R4, R0
                                 RETAIN R4
                                 RELEASE R0
/* +            */               INSTCALL R0, R4, S0, R3
                                 RELEASE R4
                                 JMP L1
                   L3:
/* PRINT        */               SYSCALL RNIL, 0, R0
                                 RELEASE R0
                                 RELEASE R1
                                 RELEASE R2
                                 RELEASE R3
                                 RETURN RNIL
                   __Fmain_END:
                                 NOP 
 
                   _SDAT:
                                 W_STRING "+" 
                                 W_STRING "<" 
                                 W_STRING "__init_0" 
                                 W_STRING "main" 
 
                   _SYMB:
/* +            */               W_SYMBOL _SDAT + 0 
/* <            */               W_SYMBOL _SDAT + 2 
/* __init_0     */               W_SYMBOL _SDAT + 4 
/* main         */               W_SYMBOL _SDAT + 13 
 
                   _FUNC:
/* __init_0     */               W_METHOD 2, -1, F__init_0, 0, __F__init_0_END - F__init_0, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* main         */               W_METHOD 3, -1, Fmain, 0, __Fmain_END - Fmain, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
 
                   _NDAT:
                                 W_BYTE 0
