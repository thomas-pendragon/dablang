## CODE

func bar(a) {
}

func main()
{
  var foo = 15;
  var a = ^ {
    print(foo);
  };
  bar(a) ^ {
    print(foo);
  };
}

## COMMENT

Block variable must be captured.

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _CODE, "code"
                                 W_SECTION _CLAS, "clas"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_END_HEADER 
 
                   _CODE:
                                 NOP 
 
                   F__init:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __F__init_END:
                                 NOP 
 
                   Fbar:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __Fbar_END:
                                 NOP 
 
                   Fmain:
                                 STACK_RESERVE 0
                                 LOAD_METHOD R0, S5
                                 LOAD_METHOD R1, S5
                                 LOAD_LOCAL_BLOCK R2, R1
/* bar          */               CALL RNIL, S4, R0, R2
                                 RETURN RNIL
                   __Fmain_END:
                                 NOP 
 
                   C__block_main0_Fcall:
                                 STACK_RESERVE 0
                                 LOAD_CLOSURE R0, 0
/* PRINT        */               SYSCALL RNIL, 0, R0
                                 RETURN RNIL
                   __C__block_main0_Fcall_END:
                                 NOP 
 
                   C__block_main1_Fcall:
                                 STACK_RESERVE 0
                                 LOAD_CLOSURE R0, 0
/* PRINT        */               SYSCALL RNIL, 0, R0
                                 RETURN RNIL
                   __C__block_main1_Fcall_END:
                                 NOP 
 
                   _CLAS:
/* __block_main */               W_CLASS 256, 14, 0
/* __block_main */               W_CLASS 257, 14, 1
 
                   _SDAT:
                                 W_STRING "__block_main0" 
                                 W_STRING "__block_main1" 
                                 W_STRING "__init" 
                                 W_STRING "a" 
                                 W_STRING "bar" 
                                 W_STRING "call" 
                                 W_STRING "main" 
 
                   _SYMB:
/* __block_main */               W_SYMBOL _SDAT + 0 
/* __block_main */               W_SYMBOL _SDAT + 14 
/* __init       */               W_SYMBOL _SDAT + 28 
/* a            */               W_SYMBOL _SDAT + 35 
/* bar          */               W_SYMBOL _SDAT + 37 
/* call         */               W_SYMBOL _SDAT + 41 
/* main         */               W_SYMBOL _SDAT + 46 
 
                   _FUNC:
/* __init       */               W_METHOD 2, -1, F__init, 0, __F__init_END - F__init
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* bar          */               W_METHOD 4, -1, Fbar, 1, __Fbar_END - Fbar
/* a<Object>    */               W_METHOD_ARG 3, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* main         */               W_METHOD 6, -1, Fmain, 0, __Fmain_END - Fmain
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* call         */               W_METHOD 5, 256, C__block_main0_Fcall, 0, __C__block_main0_Fcall_END - C__block_main0_Fcall
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* call         */               W_METHOD 5, 257, C__block_main1_Fcall, 0, __C__block_main1_Fcall_END - C__block_main1_Fcall
/* $ret<Object> */               W_METHOD_ARG -1, 0
