## CODE

func foo(a)
{
  print(a);
  if ((a * 2) == (a * 2))
  {
    print("yes");
  }
  print(a);
}

func main()
{
    foo(1);
    foo(2);
}

## OPTIONS

--strip --entry=main

## EXPECT

/* Dab dev      */                
 
                                 CONSTANT_SYMBOL "*"
                                 CONSTANT_SYMBOL "=="
                                 CONSTANT_SYMBOL __foo_Fixnum
                                 CONSTANT_SYMBOL main
                                 CONSTANT_STRING "yes"
 
                                 LOAD_FUNCTION F__foo_Fixnum, __foo_Fixnum, -1
                                 LOAD_FUNCTION Fmain, main, -1
 
                                 BREAK_LOAD 
 
                   F__foo_Fixnum:
                                 STACK_RESERVE 0
/* a            */               Q_SET_ARG R0, 0
/* PRINT        */               Q_SET_SYSCALL RNIL, 0, R0
/* 2            */               Q_SET_NUMBER R1, 2
/* *            */               Q_SET_INSTCALL R2, R0, S0, R1
/* 2            */               Q_SET_NUMBER R3, 2
/* *            */               Q_SET_INSTCALL R4, R0, S0, R3
/* ==           */               Q_SET_INSTCALL R5, R2, S1, R4
                                 Q_JMP_IF2 R5, L1, L2
                   L1:
/* "yes"        */               Q_SET_CONSTANT R6, 4
/* PRINT        */               Q_SET_SYSCALL RNIL, 0, R6
                                 JMP L2
                   L2:
/* PRINT        */               Q_SET_SYSCALL RNIL, 0, R0
                                 Q_RETURN RNIL
 
                   Fmain:
                                 STACK_RESERVE 0
/* 1            */               Q_SET_NUMBER R0, 1
/* __foo_Fixnum */               Q_SET_CALL RNIL, S2, R0
/* 2            */               Q_SET_NUMBER R1, 2
/* __foo_Fixnum */               Q_SET_CALL RNIL, S2, R1
                                 Q_RETURN RNIL
