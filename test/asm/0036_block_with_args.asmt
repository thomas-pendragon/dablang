## CODE

func foo(a)
{
  print(has_block?);
}

func main()
{
  foo(1) ^ {  };
}

## OPTIONS

--strip

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _CODE, "code"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_END_HEADER 
 
                   _CODE:
                                 NOP 
 
                   Ffoo:
                                 STACK_RESERVE 0
                                 LOAD_HAS_BLOCK R0
/* PRINT        */               SYSCALL RNIL, 0, R0
                                 RETURN RNIL
                   __Ffoo_END:
                                 NOP 
 
                   Fmain:
                                 STACK_RESERVE 0
                                 LOAD_METHOD R0, S3
/* 1            */               LOAD_NUMBER R1, 1
                                 LOAD_LOCAL_BLOCK R2, R0
/* foo          */               CALL RNIL, S1, R1, R2
                                 RETURN RNIL
                   __Fmain_END:
                                 NOP 
 
                   Fmain__block1:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __Fmain__block1_END:
                                 NOP 
 
                   _SDAT:
                                 W_STRING "a" 
                                 W_STRING "foo" 
                                 W_STRING "main" 
                                 W_STRING "main__block1" 
 
                   _SYMB:
/* a            */               W_SYMBOL _SDAT + 0 
/* foo          */               W_SYMBOL _SDAT + 2 
/* main         */               W_SYMBOL _SDAT + 6 
/* main__block1 */               W_SYMBOL _SDAT + 11 
 
                   _FUNC:
/* foo          */               W_METHOD 1, -1, Ffoo, 1, __Ffoo_END - Ffoo
/* a<Object>    */               W_METHOD_ARG 0, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* main         */               W_METHOD 2, -1, Fmain, 0, __Fmain_END - Fmain
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* main__block1 */               W_METHOD 3, -1, Fmain__block1, 0, __Fmain__block1_END - Fmain__block1
/* $ret<Object> */               W_METHOD_ARG -1, 0
