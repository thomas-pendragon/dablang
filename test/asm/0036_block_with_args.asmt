## CODE

func foo(a)
{
  print(has_block?);
}

func main()
{
  foo(1) ^ {  };
}

## OPTIONS

--strip

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _CODE, "code"
                                 W_SECTION _CLAS, "clas"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_END_HEADER 
 
                   _CODE:
                                 NOP 
 
                   Ffoo:
                                 STACK_RESERVE 0
                                 LOAD_HAS_BLOCK R0
/* PRINT        */               SYSCALL RNIL, 0, R0
                                 RETURN RNIL
                   __Ffoo_END:
                                 NOP 
 
                   Fmain:
                                 STACK_RESERVE 0
                                 LOAD_SELF R0
/* __block_main */               LOAD_CLASS R1, 256
/* new          */               INSTCALL R2, R1, S5, R0
/* 1            */               LOAD_NUMBER R3, 1
                                 LOAD_LOCAL_BLOCK R4, R2
/* foo          */               CALL RNIL, S3, R3, R4
                                 RETURN RNIL
                   __Fmain_END:
                                 NOP 
 
                   C__block_main0_Fcall:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __C__block_main0_Fcall_END:
                                 NOP 
 
                   _CLAS:
/* __block_main */               W_CLASS 256, 14, 0
 
                   _SDAT:
                                 W_STRING "__block_main0" 
                                 W_STRING "a" 
                                 W_STRING "call" 
                                 W_STRING "foo" 
                                 W_STRING "main" 
                                 W_STRING "new" 
 
                   _SYMB:
/* __block_main */               W_SYMBOL _SDAT + 0 
/* a            */               W_SYMBOL _SDAT + 14 
/* call         */               W_SYMBOL _SDAT + 16 
/* foo          */               W_SYMBOL _SDAT + 21 
/* main         */               W_SYMBOL _SDAT + 25 
/* new          */               W_SYMBOL _SDAT + 30 
 
                   _FUNC:
/* foo          */               W_METHOD 3, -1, Ffoo, 1, __Ffoo_END - Ffoo
/* a<Object>    */               W_METHOD_ARG 1, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* main         */               W_METHOD 4, -1, Fmain, 0, __Fmain_END - Fmain
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* call         */               W_METHOD 2, 256, C__block_main0_Fcall, 0, __C__block_main0_Fcall_END - C__block_main0_Fcall
/* $ret<Object> */               W_METHOD_ARG -1, 0
