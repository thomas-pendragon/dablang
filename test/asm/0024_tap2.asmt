## CODE

func tap()
{
}

func tap2()
{
  tap() ^(a,b) {
    print(a + b);
    return nil;
  };
}

## OPTIONS

--entry=tap2

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 2
                                 W_SECTION _CODE, "code"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "func"
                                 W_END_HEADER 
 
                   _CODE:
                                 NOP 
 
                   Ftap:
                                 STACK_RESERVE 0
                                 RETURN RNIL
 
                   Ftap2:
                                 STACK_RESERVE 0
                                 LOAD_NIL R0
/* tap          */               CALL_BLOCK RNIL, S1, S3, R0
                                 RETURN RNIL
 
                   Ftap2__block1:
                                 STACK_RESERVE 0
/* a            */               LOAD_ARG R0, 0
/* b            */               LOAD_ARG R1, 1
/* +            */               INSTCALL R2, R0, S0, R1
/* PRINT        */               SYSCALL RNIL, 0, R2
                                 RETURN RNIL
 
                   _SDAT:
                                 W_STRING "+" 
                                 W_STRING "tap" 
                                 W_STRING "tap2" 
                                 W_STRING "tap2__block1" 
 
                   _SYMB:
/* +            */               W_SYMBOL _SDAT + 0 
/* tap          */               W_SYMBOL _SDAT + 2 
/* tap2         */               W_SYMBOL _SDAT + 6 
/* tap2__block1 */               W_SYMBOL _SDAT + 11 
 
                   _FUNC:
/* tap          */               W_METHOD 1, -1, Ftap
/* tap2         */               W_METHOD 2, -1, Ftap2
/* tap2__block1 */               W_METHOD 3, -1, Ftap2__block1
