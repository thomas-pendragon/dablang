## CODE

func tap()
{
}

func tap2()
{
  tap() ^(a,b) {
    print(a + b);
    return nil;
  };
}

## OPTIONS

--entry=tap2

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _CODE, "code"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_END_HEADER 
 
                   _CODE:
                                 NOP 
 
                   F__init:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __F__init_END:
                                 NOP 
 
                   Ftap:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __Ftap_END:
                                 NOP 
 
                   Ftap2:
                                 STACK_RESERVE 0
                                 LOAD_NIL R0
/* tap          */               CALL_BLOCK RNIL, S4, S6, R0
                                 RETURN RNIL
                   __Ftap2_END:
                                 NOP 
 
                   Ftap2__block1:
                                 STACK_RESERVE 0
/* a            */               LOAD_ARG R0, 0
/* b            */               LOAD_ARG R1, 1
/* +            */               INSTCALL R2, R0, S0, R1
/* PRINT        */               SYSCALL RNIL, 0, R2
                                 RETURN RNIL
                   __Ftap2__block1_END:
                                 NOP 
 
                   _SDAT:
                                 W_STRING "+" 
                                 W_STRING "__init" 
                                 W_STRING "a" 
                                 W_STRING "b" 
                                 W_STRING "tap" 
                                 W_STRING "tap2" 
                                 W_STRING "tap2__block1" 
 
                   _SYMB:
/* +            */               W_SYMBOL _SDAT + 0 
/* __init       */               W_SYMBOL _SDAT + 2 
/* a            */               W_SYMBOL _SDAT + 9 
/* b            */               W_SYMBOL _SDAT + 11 
/* tap          */               W_SYMBOL _SDAT + 13 
/* tap2         */               W_SYMBOL _SDAT + 17 
/* tap2__block1 */               W_SYMBOL _SDAT + 22 
 
                   _FUNC:
/* __init       */               W_METHOD_EX 1, -1, F__init, 0
                                 W_METHOD_LEN __F__init_END - F__init
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* tap          */               W_METHOD_EX 4, -1, Ftap, 0
                                 W_METHOD_LEN __Ftap_END - Ftap
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* tap2         */               W_METHOD_EX 5, -1, Ftap2, 0
                                 W_METHOD_LEN __Ftap2_END - Ftap2
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* tap2__block1 */               W_METHOD_EX 6, -1, Ftap2__block1, 2
                                 W_METHOD_LEN __Ftap2__block1_END - Ftap2__block1
/* a<Object>    */               W_METHOD_ARG 2, 0
/* b<Object>    */               W_METHOD_ARG 3, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
