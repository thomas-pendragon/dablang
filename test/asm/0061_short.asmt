## CODE

func fun1()
{
  print("fun1");
  return false;
}

func fun2()
{
  print("fun2");
  return true;
}

func main_and()
{
  print(fun1() && fun2());
}

func main_or()
{
  print(fun1() || fun2());
}

func main()
{
  main_and();
  main_or();
}

## EXPECT

/* Dab dev      */                
 
                                 CONSTANT_SYMBOL "fun1"
                                 CONSTANT_SYMBOL "fun2"
                                 CONSTANT_SYMBOL main
                                 CONSTANT_SYMBOL main_and
                                 CONSTANT_SYMBOL main_or
                                 CONSTANT_STRING "fun1"
                                 CONSTANT_STRING "fun2"
 
                                 LOAD_FUNCTION Ffun1, fun1, -1
                                 LOAD_FUNCTION Ffun2, fun2, -1
                                 LOAD_FUNCTION Fmain, main, -1
                                 LOAD_FUNCTION Fmain_and, main_and, -1
                                 LOAD_FUNCTION Fmain_or, main_or, -1
 
                                 BREAK_LOAD 
 
                   Ffun1:
                                 STACK_RESERVE 0
/* "fun1"       */               Q_SET_CONSTANT R0, 5
/* PRINT        */               Q_SET_SYSCALL RNIL, 0, R0
                                 Q_SET_FALSE R1
                                 Q_RETURN R1
 
                   Ffun2:
                                 STACK_RESERVE 0
/* "fun2"       */               Q_SET_CONSTANT R0, 6
/* PRINT        */               Q_SET_SYSCALL RNIL, 0, R0
                                 Q_SET_TRUE R1
                                 Q_RETURN R1
 
                   Fmain:
                                 STACK_RESERVE 0
/* main_and     */               Q_SET_CALL RNIL, S3
/* main_or      */               Q_SET_CALL RNIL, S4
                                 Q_RETURN RNIL
 
                   Fmain_and:
                                 STACK_RESERVE 0
/* fun1         */               Q_SET_CALL R0, S0
                                 Q_JMP_IF2 R0, L1, L2
                   L1:
/* fun2         */               Q_SET_CALL R0, S1
                                 JMP L2
                   L2:
/* PRINT        */               Q_SET_SYSCALL RNIL, 0, R0
                                 Q_RETURN RNIL
 
                   Fmain_or:
                                 STACK_RESERVE 0
/* fun1         */               Q_SET_CALL R0, S0
                                 Q_JMP_IF2 R0, L3, L4
                   L4:
/* fun2         */               Q_SET_CALL R0, S1
                                 JMP L3
                   L3:
/* PRINT        */               Q_SET_SYSCALL RNIL, 0, R0
                                 Q_RETURN RNIL
