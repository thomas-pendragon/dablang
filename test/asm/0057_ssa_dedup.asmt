## CODE

func foo(a)
{
  print((a * 2) + (a * 2));
}

## OPTIONS

--entry=foo

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 2
                                 W_SECTION _SDAT, "data"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _CODE, "code"
                                 W_SECTION _FUNC, "func"
                                 W_END_HEADER 
 
                   _SDAT:
                                 W_STRING "*" 
                                 W_STRING "+" 
                                 W_STRING "foo" 
 
                   _SYMB:
/* *            */               W_SYMBOL _SDAT + 0 
/* +            */               W_SYMBOL _SDAT + 2 
/* foo          */               W_SYMBOL _SDAT + 4 
 
                   _CODE:
                                 NOP 
 
                   Ffoo:
                                 STACK_RESERVE 0
/* a            */               LOAD_ARG R0, 0
/* 2            */               LOAD_NUMBER R1, 2
/* *            */               INSTCALL R2, R0, S0, R1
/* 2            */               LOAD_NUMBER R3, 2
/* *            */               INSTCALL R4, R0, S0, R3
/* +            */               INSTCALL R5, R2, S1, R4
/* PRINT        */               Q_SET_SYSCALL RNIL, 0, R5
                                 Q_RETURN RNIL
 
                   _FUNC:
/* foo          */               W_METHOD 2, -1, Ffoo
