## CODE

func functrue() { return true; }

class Foo
{
  func go()
{
@var = 123;
  var a = 1;
  var b = "String1";
  var c = String.new("String2");
  var d = @[a, b, c];
  print(d);
  if (functrue())
  {
    d = @var;
  }
  print(d);
}
}

func main()
{
  Foo.new.go();
}

## OPTIONS

--no-autorelease --no-opt

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _DATA, "data"
                                 W_SECTION _CODE, "code"
                                 W_SECTION _CLAS, "clas"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_SECTION _NDAT, "ndat"
                                 W_END_HEADER 
 
                   _DATA:
                                 W_STRING "String1" 
                                 W_STRING "String2" 
 
                   _CODE:
                                 NOP 
 
                   F__init_0:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __F__init_0_END:
                                 NOP 
 
                   Ffunctrue:
                                 STACK_RESERVE 0
                                 LOAD_TRUE R0
                                 RETURN R0
                   __Ffunctrue_END:
                                 NOP 
 
                   Fmain:
                                 STACK_RESERVE 0
/* Foo          */               LOAD_CLASS R0, 256
/* new          */               INSTCALL R1, R0, S5
/* go           */               INSTCALL RNIL, R1, S3
                                 RELEASE R0
                                 RELEASE R1
                                 RETURN RNIL
                   __Fmain_END:
                                 NOP 
 
                   CFoo_Fgo:
                                 STACK_RESERVE 0
/* 123          */               LOAD_NUMBER R0, 123
/* @var=        */               SET_INSTVAR S6, R0
/* 1            */               LOAD_NUMBER R1, 1
/* "String1"    */               LOAD_STRING R2, _DATA + 0, 7
/* "String2"    */               LOAD_STRING R3, _DATA + 8, 7
/* String       */               LOAD_CLASS R4, 1
/* new          */               INSTCALL R5, R4, S5, R3
                                 NEW_ARRAY R6, R1, R2, R5
/* PRINT        */               SYSCALL RNIL, 0, R6
/* functrue     */               CALL R7, S2
                                 JMP_IF R7, L1, L2
                   L1:
                                 RELEASE R6
/* @var         */               GET_INSTVAR R6, S6
                                 JMP L2
                   L2:
/* PRINT        */               SYSCALL RNIL, 0, R6
                                 RELEASE R0
                                 RELEASE R1
                                 RELEASE R2
                                 RELEASE R3
                                 RELEASE R4
                                 RELEASE R5
                                 RELEASE R6
                                 RELEASE R7
                                 RETURN RNIL
                   __CFoo_Fgo_END:
                                 NOP 
 
                   _CLAS:
/* Foo          */               W_CLASS 256, 0, 0
 
                   _SDAT:
                                 W_STRING "Foo" 
                                 W_STRING "__init_0" 
                                 W_STRING "functrue" 
                                 W_STRING "go" 
                                 W_STRING "main" 
                                 W_STRING "new" 
                                 W_STRING "var" 
 
                   _SYMB:
/* Foo          */               W_SYMBOL _SDAT + 0 
/* __init_0     */               W_SYMBOL _SDAT + 4 
/* functrue     */               W_SYMBOL _SDAT + 13 
/* go           */               W_SYMBOL _SDAT + 22 
/* main         */               W_SYMBOL _SDAT + 25 
/* new          */               W_SYMBOL _SDAT + 30 
/* var          */               W_SYMBOL _SDAT + 34 
 
                   _FUNC:
/* __init_0     */               W_METHOD 1, -1, F__init_0, 0, __F__init_0_END - F__init_0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* functrue     */               W_METHOD 2, -1, Ffunctrue, 0, __Ffunctrue_END - Ffunctrue
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* main         */               W_METHOD 4, -1, Fmain, 0, __Fmain_END - Fmain
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* go           */               W_METHOD 3, 256, CFoo_Fgo, 0, __CFoo_Fgo_END - CFoo_Fgo
/* $ret<Object> */               W_METHOD_ARG -1, 0
 
                   _NDAT:
                                 W_BYTE 0
