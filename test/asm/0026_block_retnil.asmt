## CODE

func tap()
{
    tap() ^(){
        print("ok");
    };

    tap() ^(){
        print("ok");
        return nil;
    };
}

## OPTIONS

--no-opt --entry=tap

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _DATA, "data"
                                 W_SECTION _CODE, "code"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_END_HEADER 
 
                   _DATA:
                                 W_STRING "ok" 
 
                   _CODE:
                                 NOP 
 
                   F__init:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __F__init_END:
                                 NOP 
 
                   Ftap:
                                 STACK_RESERVE 0
                                 LOAD_NIL R0
/* tap          */               CALL_BLOCK RNIL, S1, S2, R0
                                 LOAD_NIL R1
/* tap          */               CALL_BLOCK RNIL, S1, S3, R1
                                 RETURN RNIL
                   __Ftap_END:
                                 NOP 
 
                   Ftap__block1:
                                 STACK_RESERVE 0
/* "ok"         */               LOAD_STRING R0, _DATA + 0, 2
/* PRINT        */               SYSCALL RNIL, 0, R0
                                 RETURN RNIL
                   __Ftap__block1_END:
                                 NOP 
 
                   Ftap__block2:
                                 STACK_RESERVE 0
/* "ok"         */               LOAD_STRING R0, _DATA + 0, 2
/* PRINT        */               SYSCALL RNIL, 0, R0
                                 RETURN RNIL
                   __Ftap__block2_END:
                                 NOP 
 
                   _SDAT:
                                 W_STRING "__init" 
                                 W_STRING "tap" 
                                 W_STRING "tap__block1" 
                                 W_STRING "tap__block2" 
 
                   _SYMB:
/* __init       */               W_SYMBOL _SDAT + 0 
/* tap          */               W_SYMBOL _SDAT + 7 
/* tap__block1  */               W_SYMBOL _SDAT + 11 
/* tap__block2  */               W_SYMBOL _SDAT + 23 
 
                   _FUNC:
/* __init       */               W_METHOD 0, -1, F__init, 0, __F__init_END - F__init
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* tap          */               W_METHOD 1, -1, Ftap, 0, __Ftap_END - Ftap
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* tap__block1  */               W_METHOD 2, -1, Ftap__block1, 0, __Ftap__block1_END - Ftap__block1
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* tap__block2  */               W_METHOD 3, -1, Ftap__block2, 0, __Ftap__block2_END - Ftap__block2
/* $ret<Object> */               W_METHOD_ARG -1, 0
