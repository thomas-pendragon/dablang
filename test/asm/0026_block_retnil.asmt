## CODE

func tap()
{
    tap() ^(){
        print("ok");
    };

    tap() ^(){
        print("ok");
        return nil;
    };
}

## OPTIONS

--no-opt --entry=tap

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _DATA, "data"
                                 W_SECTION _CODE, "code"
                                 W_SECTION _CLAS, "clas"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_END_HEADER 
 
                   _DATA:
                                 W_STRING "ok" 
 
                   _CODE:
                                 NOP 
 
                   F__init:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __F__init_END:
                                 NOP 
 
                   Ftap:
                                 STACK_RESERVE 0
/* __block_tap0 */               LOAD_CLASS R0, 256
/* new          */               INSTCALL R1, R0, S4
                                 LOAD_LOCAL_BLOCK R2, R1
/* tap          */               CALL RNIL, S5, R2
/* __block_tap1 */               LOAD_CLASS R3, 257
/* new          */               INSTCALL R4, R3, S4
                                 LOAD_LOCAL_BLOCK R5, R4
/* tap          */               CALL RNIL, S5, R5
                                 RETURN RNIL
                   __Ftap_END:
                                 NOP 
 
                   C__block_tap0_Fcall:
                                 STACK_RESERVE 0
/* "ok"         */               LOAD_STRING R0, _DATA + 0, 2
/* PRINT        */               SYSCALL RNIL, 0, R0
                                 RETURN RNIL
                   __C__block_tap0_Fcall_END:
                                 NOP 
 
                   C__block_tap1_Fcall:
                                 STACK_RESERVE 0
/* "ok"         */               LOAD_STRING R0, _DATA + 0, 2
/* PRINT        */               SYSCALL RNIL, 0, R0
                                 RETURN RNIL
                   __C__block_tap1_Fcall_END:
                                 NOP 
 
                   _CLAS:
/* __block_tap0 */               W_CLASS 256, 14, 0
/* __block_tap1 */               W_CLASS 257, 14, 1
 
                   _SDAT:
                                 W_STRING "__block_tap0" 
                                 W_STRING "__block_tap1" 
                                 W_STRING "__init" 
                                 W_STRING "call" 
                                 W_STRING "new" 
                                 W_STRING "tap" 
 
                   _SYMB:
/* __block_tap0 */               W_SYMBOL _SDAT + 0 
/* __block_tap1 */               W_SYMBOL _SDAT + 13 
/* __init       */               W_SYMBOL _SDAT + 26 
/* call         */               W_SYMBOL _SDAT + 33 
/* new          */               W_SYMBOL _SDAT + 38 
/* tap          */               W_SYMBOL _SDAT + 42 
 
                   _FUNC:
/* __init       */               W_METHOD 2, -1, F__init, 0, __F__init_END - F__init
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* tap          */               W_METHOD 5, -1, Ftap, 0, __Ftap_END - Ftap
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* call         */               W_METHOD 3, 256, C__block_tap0_Fcall, 0, __C__block_tap0_Fcall_END - C__block_tap0_Fcall
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* call         */               W_METHOD 3, 257, C__block_tap1_Fcall, 0, __C__block_tap1_Fcall_END - C__block_tap1_Fcall
/* $ret<Object> */               W_METHOD_ARG -1, 0
