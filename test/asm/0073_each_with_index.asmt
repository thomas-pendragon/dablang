## CODE

class Array
{
  func each_with_index()
  {
    var index = 0;
    var count = self.count;
    while (index != count)
    {
      yield(self[index], index);
      index = index + 1;
    }
  }
}

## OPTIONS

--no-strip

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 2
                                 W_SECTION _SDAT, "data"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _CLAS, "clas"
                                 W_SECTION _CODE, "code"
                                 W_SECTION _FUNC, "func"
                                 W_END_HEADER 
 
                   _SDAT:
                                 W_STRING "!=" 
                                 W_STRING "+" 
                                 W_STRING "Array" 
                                 W_STRING "[]" 
                                 W_STRING "count" 
                                 W_STRING "each_with_index" 
 
                   _SYMB:
/* !=           */               W_SYMBOL _SDAT + 0 
/* +            */               W_SYMBOL _SDAT + 3 
/* Array        */               W_SYMBOL _SDAT + 5 
/* []           */               W_SYMBOL _SDAT + 11 
/* count        */               W_SYMBOL _SDAT + 14 
/* each_with_in */               W_SYMBOL _SDAT + 20 
 
                   _CLAS:
/* Array        */               W_CLASS 5, 0, 2
 
                   _CODE:
                                 NOP 
 
                   CArray_Feach_with_index:
                                 STACK_RESERVE 0
/* 0            */               LOAD_NUMBER R0, 0
                                 Q_SET_SELF R1
/* count        */               Q_SET_INSTCALL R2, R1, S4
                                 JMP L1
                   L1:
/* !=           */               Q_SET_INSTCALL R3, R0, S0, R2
                                 Q_JMP_IF2 R3, L2, L3
                   L2:
                                 Q_SET_SELF R4
/* []           */               Q_SET_INSTCALL R5, R4, S3, R0
                                 Q_YIELD RNIL, R5, R0
/* 1            */               LOAD_NUMBER R6, 1
/* +            */               Q_SET_INSTCALL R0, R0, S1, R6
                                 JMP L1
                   L3:
                                 Q_RETURN RNIL
 
                   _FUNC:
/* each_with_in */               W_METHOD 5, 5, CArray_Feach_with_index
