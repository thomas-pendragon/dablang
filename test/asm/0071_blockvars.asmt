## CODE

func test()
{
  yield(1);
}

func qux(a, b) {}

func main()
{
  var other = 1;
  test() ^(bar)
  {
    qux(bar, other);
  };
}

## EXPECT

/* Dab dev      */                
 
                                 CONSTANT_SYMBOL "main__block1"
                                 CONSTANT_SYMBOL qux
                                 CONSTANT_SYMBOL test
 
                                 LOAD_FUNCTION Fmain, main, -1
                                 LOAD_FUNCTION Fmain__block1, main__block1, -1
                                 LOAD_FUNCTION Fqux, qux, -1
                                 LOAD_FUNCTION Ftest, test, -1
 
                                 BREAK_LOAD 
 
                   Fmain:
                                 STACK_RESERVE 0
/* 1            */               Q_SET_NUMBER R0, 1
                                 PUSH_SSA R0
                                 PUSH_ARRAY 1
                                 Q_SET_POP R1
/* test         */               Q_SET_CALL_BLOCK RNIL, S2, S0, R1
                                 Q_SET_NIL R2
                                 PUSH_SSA R2
                                 RETURN 
 
                   Fmain__block1:
                                 STACK_RESERVE 0
/* bar          */               Q_SET_ARG R0, 0
                                 Q_SET_CLOSURE R1, 0
/* qux          */               Q_SET_CALL RNIL, S1, R0, R1
                                 Q_SET_NIL R2
                                 PUSH_SSA R2
                                 RETURN 
 
                   Fqux:
                                 STACK_RESERVE 0
                                 Q_SET_NIL R0
                                 PUSH_SSA R0
                                 RETURN 
 
                   Ftest:
                                 STACK_RESERVE 0
/* 1            */               Q_SET_NUMBER R0, 1
                                 PUSH_SSA R0
                                 YIELD 1
                                 POP 1
                                 Q_SET_NIL R1
                                 PUSH_SSA R1
                                 RETURN
