## CODE

func spec(a)
{
    print(a.class);
}

func foo()
{
    spec(1);
    spec(1);
    spec("A");
}

## OPTIONS

--entry=foo --strip

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 2
                                 W_SECTION _DATA, "data"
                                 W_SECTION _SDAT, "data"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _CODE, "code"
                                 W_SECTION _FUNC, "func"
                                 W_END_HEADER 
 
                   _DATA:
                                 W_STRING "A" 
                                 W_STRING "Fixnum" 
                                 W_STRING "String" 
 
                   _SDAT:
                                 W_STRING "__spec_Fixnum" 
                                 W_STRING "__spec_String" 
                                 W_STRING "foo" 
 
                   _SYMB:
/* __spec_Fixnu */               W_SYMBOL _SDAT + 0 
/* __spec_Strin */               W_SYMBOL _SDAT + 14 
/* foo          */               W_SYMBOL _SDAT + 28 
 
                   _CODE:
                                 NOP 
 
                   F__spec_Fixnum:
                                 STACK_RESERVE 0
/* "Fixnum"     */               LOAD_STRING R0, _DATA + 2, 6
/* PRINT        */               SYSCALL RNIL, 0, R0
                                 Q_RETURN RNIL
 
                   F__spec_String:
                                 STACK_RESERVE 0
/* "String"     */               LOAD_STRING R0, _DATA + 9, 6
/* PRINT        */               SYSCALL RNIL, 0, R0
                                 Q_RETURN RNIL
 
                   Ffoo:
                                 STACK_RESERVE 0
/* 1            */               LOAD_NUMBER R0, 1
/* __spec_Fixnu */               CALL RNIL, S0, R0
/* 1            */               LOAD_NUMBER R1, 1
/* __spec_Fixnu */               CALL RNIL, S0, R1
/* "A"          */               LOAD_STRING R2, _DATA + 0, 1
/* __spec_Strin */               CALL RNIL, S1, R2
                                 Q_RETURN RNIL
 
                   _FUNC:
/* __spec_Fixnu */               W_METHOD 0, -1, F__spec_Fixnum
/* __spec_Strin */               W_METHOD 1, -1, F__spec_String
/* foo          */               W_METHOD 2, -1, Ffoo
