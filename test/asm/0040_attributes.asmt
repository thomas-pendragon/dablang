## CODE

[sample_attribute, another_attribute(14, "foo")]
func foo()
{
}

func sample_attribute(method)
{
}

func another_attribute(method, arg1, arg2)
{
}

## OPTIONS

--no-opt --with-attributes --entry=foo

## EXPECT

/* Dab dev      */                
 
                                 CONSTANT_SYMBOL another_attribute
                                 CONSTANT_SYMBOL sample_attribute
                                 CONSTANT_STRING "foo"
 
                                 LOAD_FUNCTION F__init, __init, -1
                                 LOAD_FUNCTION Fanother_attribute, another_attribute, -1
                                 LOAD_FUNCTION Ffoo, foo, -1
                                 LOAD_FUNCTION Fsample_attribute, sample_attribute, -1
 
                                 BREAK_LOAD 
 
                   F__init:
                                 STACK_RESERVE 0
                                 PUSH_METHOD foo
                                 Q_SET_POP R0
/* sample_attri */               Q_SET_CALL RNIL, S1, R0
                                 PUSH_METHOD foo
                                 Q_SET_POP R1
/* 14           */               Q_SET_NUMBER R2, 14
/* "foo"        */               Q_SET_CONSTANT R3, 2
/* another_attr */               Q_SET_CALL RNIL, S0, R1, R2, R3
                                 Q_RETURN RNIL
 
                   Fanother_attribute:
                                 STACK_RESERVE 0
/* arg2         */               Q_SET_ARG R0, 2
/* arg1         */               Q_SET_ARG R1, 1
/* method       */               Q_SET_ARG R2, 0
                                 Q_RETURN RNIL
 
                   Ffoo:
                                 STACK_RESERVE 0
                                 Q_RETURN RNIL
 
                   Fsample_attribute:
                                 STACK_RESERVE 0
/* method       */               Q_SET_ARG R0, 0
                                 Q_RETURN RNIL
