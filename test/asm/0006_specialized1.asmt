## CODE

func foo(a)
{
  print(a.class);
}

func bar()
{
  foo("str");
}

## OPTIONS

--no-opt --entry=bar

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _DATA, "data"
                                 W_SECTION _CODE, "code"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_END_HEADER 
 
                   _DATA:
                                 W_STRING "str" 
 
                   _CODE:
                                 NOP 
 
                   F__init:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __F__init_END:
                                 NOP 
 
                   Fbar:
                                 STACK_RESERVE 0
/* "str"        */               LOAD_STRING R0, _DATA + 0, 3
/* foo          */               CALL RNIL, S4, R0
                                 RETURN RNIL
                   __Fbar_END:
                                 NOP 
 
                   Ffoo:
                                 STACK_RESERVE 0
/* a            */               LOAD_ARG R0, 0
/* class        */               INSTCALL R1, R0, S3
/* PRINT        */               SYSCALL RNIL, 0, R1
                                 RETURN RNIL
                   __Ffoo_END:
                                 NOP 
 
                   _SDAT:
                                 W_STRING "__init" 
                                 W_STRING "a" 
                                 W_STRING "bar" 
                                 W_STRING "class" 
                                 W_STRING "foo" 
 
                   _SYMB:
/* __init       */               W_SYMBOL _SDAT + 0 
/* a            */               W_SYMBOL _SDAT + 7 
/* bar          */               W_SYMBOL _SDAT + 9 
/* class        */               W_SYMBOL _SDAT + 13 
/* foo          */               W_SYMBOL _SDAT + 19 
 
                   _FUNC:
/* __init       */               W_METHOD_EX 0, -1, F__init, 0
                                 W_METHOD_LEN __F__init_END - F__init
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* bar          */               W_METHOD_EX 2, -1, Fbar, 0
                                 W_METHOD_LEN __Fbar_END - Fbar
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* foo          */               W_METHOD_EX 4, -1, Ffoo, 1
                                 W_METHOD_LEN __Ffoo_END - Ffoo
/* a<Object>    */               W_METHOD_ARG 1, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
