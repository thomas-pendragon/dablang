## CODE

func foo(a)
{
  print(a.class);
}

func bar()
{
  foo("str");
}

## OPTIONS

--no-opt --entry=bar

## EXPECT

/* Dab dev 2    */                
 
                                 W_HEADER 3
                                 W_OFFSET 0
                                 W_SECTION _DATA, "data"
                                 W_SECTION _CODE, "code"
                                 W_SECTION _SDAT, "symd"
                                 W_SECTION _SYMB, "symb"
                                 W_SECTION _FUNC, "fext"
                                 W_SECTION _NDAT, "ndat"
                                 W_END_HEADER 
 
                   _DATA:
                                 W_STRING "str" 
 
                   _CODE:
                                 NOP 
 
                   F__init_0:
                                 STACK_RESERVE 0
                                 RETURN RNIL
                   __F__init_0_END:
                                 NOP 
 
                   Fbar:
                                 STACK_RESERVE 0
/* "str"        */               LOAD_STRING R0, _DATA + 0, 3
/* foo          */               CALL RNIL, S4, R0
                                 RELEASE R0
                                 RETURN RNIL
                   __Fbar_END:
                                 NOP 
 
                   Ffoo:
                                 STACK_RESERVE 0
/* a            */               LOAD_ARG R0, 0
/* class        */               INSTCALL R1, R0, S3
/* PRINT        */               SYSCALL RNIL, 0, R1
                                 RELEASE R0
                                 RELEASE R1
                                 RETURN RNIL
                   __Ffoo_END:
                                 NOP 
 
                   _SDAT:
                                 W_STRING "__init_0" 
                                 W_STRING "a" 
                                 W_STRING "bar" 
                                 W_STRING "class" 
                                 W_STRING "foo" 
 
                   _SYMB:
/* __init_0     */               W_SYMBOL _SDAT + 0 
/* a            */               W_SYMBOL _SDAT + 9 
/* bar          */               W_SYMBOL _SDAT + 11 
/* class        */               W_SYMBOL _SDAT + 15 
/* foo          */               W_SYMBOL _SDAT + 21 
 
                   _FUNC:
/* __init_0     */               W_METHOD 0, -1, F__init_0, 0, __F__init_0_END - F__init_0, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* bar          */               W_METHOD 2, -1, Fbar, 0, __Fbar_END - Fbar, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
/* foo          */               W_METHOD 4, -1, Ffoo, 1, __Ffoo_END - Ffoo, 0
/* a<Object>    */               W_METHOD_ARG 1, 0
/* $ret<Object> */               W_METHOD_ARG -1, 0
 
                   _NDAT:
                                 W_BYTE 0
