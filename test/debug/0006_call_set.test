## ASM CODE

W_HEADER 2
W_SECTION _DATA, "data"
W_SECTION _SYMB, "symb"
W_SECTION _CODE, "code"
W_SECTION _FUNC, "func"

W_END_HEADER

_DATA:
  W_STRING "hello world"

SYM_MAIN:
  W_STRING "main"

SYM_FUN1:
  W_STRING "fun1"

_SYMB:
  W_SYMBOL SYM_FUN1
  W_SYMBOL SYM_MAIN

_CODE:
  NOP

                   Ffun1:
                                 STACK_RESERVE 0
                                 LOAD_TRUE R0
                                 Q_RETURN R0
 
                   Fmain:
                                 STACK_RESERVE 0
                                 CALL R7, S0
                                 Q_SET_SYSCALL RNIL, 0, R7
                                 Q_RETURN RNIL

_FUNC:
  W_METHOD 0, -1, Ffun1
  W_METHOD 1, -1, Fmain

## INPUT

allcode
break 205
stack
registers
run
code
stack
step
quit

## EXPECT STDOUT

IP = 208
       198: NOP 
       199: STACK_RESERVE 0
       202: LOAD_TRUE R0
       205: Q_RETURN R0
>      208: STACK_RESERVE 0
       211: CALL R7, S0
       217: Q_SET_SYSCALL RNIL, 0, R7
       224: Q_RETURN RNIL
debug: break at 205.
Stack:
Dump of stack:
[   0] FIXN 0
[   1] FIXN -1
[   2] FIXN 0
[   3] NIL  nil
[   4] FIXN 0
[   5] NIL  nil
[   6] FIXN 65535
[   7] INVA ?
IP = 205
       199: STACK_RESERVE 0
       202: LOAD_TRUE R0
>      205: Q_RETURN R0
       208: STACK_RESERVE 0
       211: CALL R7, S0
Stack:
Dump of stack:
[   0] FIXN 0
[   1] FIXN -1
[   2] FIXN 0
[   3] NIL  nil
[   4] FIXN 0
[   5] NIL  nil
[   6] FIXN 65535
[   7] INVA ?
[   8] FIXN 217
[   9] FIXN 2
[  10] FIXN 0
[  11] NIL  nil
[  12] FIXN 0
[  13] NIL  nil
[  14] FIXN 7
[  15] INVA ?
