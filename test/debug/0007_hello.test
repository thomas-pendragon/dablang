## ASM CODE
 
W_HEADER 2
W_SECTION _DATA, "data"
W_SECTION _SYMB, "symb"
W_SECTION _CODE, "code"
W_SECTION _FUNC, "func"

W_END_HEADER

_DATA:
  W_STRING "hello world"

SYM_MAIN:
  W_STRING "main"

_SYMB:
  W_SYMBOL SYM_MAIN

_CODE:
  NOP

Fmain:
                                 STACK_RESERVE 0
/* "hello world */               LOAD_STRING R0, _DATA, 11
                                 SYSCALL RNIL, 0, R0
                                 NOP
                                 RETURN RNIL 

_FUNC:
  W_METHOD 0, -1, Fmain

## INPUT

allcode
break 189
run
code
stack
ssaregs
step
code
stack
ssaregs
step
code
stack
ssaregs
step
code
stack
ssaregs
quit

## EXPECT STDOUT

IP = 186
       185: NOP 
>      186: STACK_RESERVE 0
       189: LOAD_STRING R0, 160, 11
       208: SYSCALL RNIL, 0, R0
       215: NOP 
       216: RETURN RNIL
debug: break at 189.
IP = 189
       185: NOP 
       186: STACK_RESERVE 0
>      189: LOAD_STRING R0, 160, 11
       208: SYSCALL RNIL, 0, R0
       215: NOP 
Stack:
Dump of stack:
[   0] FIXN 0
[   1] FIXN -1
[   2] FIXN 0
[   3] NIL  nil
[   4] FIXN 0
[   5] NIL  nil
[   6] FIXN 65535
[   7] INVA ?
Registers:
IP = 208
       186: STACK_RESERVE 0
       189: LOAD_STRING R0, 160, 11
>      208: SYSCALL RNIL, 0, R0
       215: NOP 
       216: RETURN RNIL
Stack:
Dump of stack:
[   0] FIXN 0
[   1] FIXN -1
[   2] FIXN 0
[   3] NIL  nil
[   4] FIXN 0
[   5] NIL  nil
[   6] FIXN 65535
[   7] INVA ?
Registers:
R0: CSTR "hello world" [1 strong]
hello worldIP = 215
       189: LOAD_STRING R0, 160, 11
       208: SYSCALL RNIL, 0, R0
>      215: NOP 
       216: RETURN RNIL
Stack:
Dump of stack:
[   0] FIXN 0
[   1] FIXN -1
[   2] FIXN 0
[   3] NIL  nil
[   4] FIXN 0
[   5] NIL  nil
[   6] FIXN 65535
[   7] INVA ?
[   8] CSTR "hello world" [3 strong]
Registers:
R0: CSTR "hello world" [3 strong]
IP = 216
       208: SYSCALL RNIL, 0, R0
       215: NOP 
>      216: RETURN RNIL
Stack:
Dump of stack:
[   0] FIXN 0
[   1] FIXN -1
[   2] FIXN 0
[   3] NIL  nil
[   4] FIXN 0
[   5] NIL  nil
[   6] FIXN 65535
[   7] INVA ?
[   8] CSTR "hello world" [3 strong]
Registers:
R0: CSTR "hello world" [3 strong]
