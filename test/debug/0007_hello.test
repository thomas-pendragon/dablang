## ASM CODE
 
W_HEADER 3
W_SECTION _DATA, "data"
W_SECTION _SYMB, "symb"
W_SECTION _CODE, "code"
W_SECTION _FUNC, "func"

W_END_HEADER

_DATA:
  W_STRING "hello world"

SYM_MAIN:
  W_STRING "main"

_SYMB:
  W_SYMBOL SYM_MAIN

_CODE:
  NOP

Fmain:
                                 STACK_RESERVE 0
/* "hello world */               LOAD_STRING R0, _DATA, 11
                                 SYSCALL RNIL, 0, R0
                                 NOP
                                 RETURN RNIL 

_FUNC:
  W_METHOD 0, -1, Fmain

## INPUT

allcode
break 197
run
code
stack
ssaregs
step
code
stack
ssaregs
step
code
stack
ssaregs
step
code
stack
ssaregs
quit

## EXPECT STDOUT

IP = 194
       193: NOP 
>      194: STACK_RESERVE 0
       197: LOAD_STRING R0, 168, 11
       216: SYSCALL RNIL, 0, R0
       223: NOP 
       224: RETURN RNIL
debug: break at 197.
IP = 197
       193: NOP 
       194: STACK_RESERVE 0
>      197: LOAD_STRING R0, 168, 11
       216: SYSCALL RNIL, 0, R0
       223: NOP 
Registers:
IP = 216
       194: STACK_RESERVE 0
       197: LOAD_STRING R0, 168, 11
>      216: SYSCALL RNIL, 0, R0
       223: NOP 
       224: RETURN RNIL
Registers:
R0: CSTR "hello world" [1 strong]
hello worldIP = 223
       197: LOAD_STRING R0, 168, 11
       216: SYSCALL RNIL, 0, R0
>      223: NOP 
       224: RETURN RNIL
Registers:
R0: CSTR "hello world" [4 strong]
IP = 224
       216: SYSCALL RNIL, 0, R0
       223: NOP 
>      224: RETURN RNIL
Registers:
R0: CSTR "hello world" [4 strong]
